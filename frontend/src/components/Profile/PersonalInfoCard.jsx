import React, { useState } from 'react';
import { Card, Form, Input, Button, message } from 'antd';
import { 
  EditOutlined, 
  SaveOutlined, 
  UserOutlined,
  PhoneOutlined,
  MailOutlined,
  CalendarOutlined
} from '@ant-design/icons';
import { useAuth } from '../../context/AuthContext';

const PersonalInfoCard = ({ user }) => {
  const { updateProfile } = useAuth();
  const [form] = Form.useForm();
  const [editMode, setEditMode] = useState(false);
  const [loading, setLoading] = useState(false);

  // Format date t·ª´ ISO string
  const formatDate = (dateString) => {
    if (!dateString) return '';
    try {
      return new Date(dateString).toLocaleDateString('vi-VN');
    } catch {
      return '';
    }
  };

  // H√†m l∆∞u th√¥ng tin ng∆∞·ªùi d√πng
  const handleSaveUserInfo = async () => {
    try {
      setLoading(true);
      const values = await form.validateFields();
      
      const result = await updateProfile(user.id, values);
      
      if (result.success) {
        message.success('C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!');
        setEditMode(false);
      } else {
        message.error('C·∫≠p nh·∫≠t th√¥ng tin th·∫•t b·∫°i!');
      }
    } catch (error) {
      message.error('L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin. Vui l√≤ng th·ª≠ l·∫°i!');
      console.error('Error updating user info:', error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <Card
      title={
        <div className="flex items-center text-lg font-medium">
          <UserOutlined className="mr-2 text-primary" /> 
          Th√¥ng tin c√° nh√¢n
        </div>
      }
      className="shadow-md rounded-xl overflow-hidden"
      extra={
        <Button 
          type={editMode ? "primary" : "default"}
          icon={editMode ? <SaveOutlined /> : <EditOutlined />}
          onClick={editMode ? handleSaveUserInfo : () => setEditMode(true)}
          loading={loading}
          className={editMode ? "bg-button-gradient hover:bg-button-gradient-hover" : ""}
        >
          {editMode ? 'L∆∞u th√¥ng tin' : 'Ch·ªânh s·ª≠a'}
        </Button>
      }
    >
      <Form 
        form={form}
        layout="vertical" 
        initialValues={{
          name: user?.name,
          email: user?.email,
          phone: user?.phone,
        }}
        className="transition-all duration-300"
      >
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <Form.Item 
            label="H·ªç v√† t√™n" 
            name="name"
            rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p h·ªç v√† t√™n!' }]}
          >
            <Input 
              disabled={!editMode} 
              className="rounded-lg py-2" 
              prefix={<UserOutlined className="text-gray-400 mr-2" />}
              placeholder="Nh·∫≠p h·ªç v√† t√™n"
            />
          </Form.Item>
          
          <Form.Item 
            label="S·ªë ƒëi·ªán tho·∫°i" 
            name="phone"
            rules={[
              { required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i!' },
              { pattern: /^[0-9]{10,11}$/, message: 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá!' }
            ]}
          >
            <Input 
              disabled={!editMode} 
              className="rounded-lg py-2" 
              prefix={<PhoneOutlined className="text-gray-400 mr-2" />}
              placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
            />
          </Form.Item>
          
          <Form.Item label="Email" name="email">
            <Input 
              disabled={true} 
              className="rounded-lg py-2 bg-light-bg-secondary" 
              prefix={<MailOutlined className="text-gray-400 mr-2" />}
            />
          </Form.Item>
          
          <Form.Item label="Ng√†y tham gia">
            <Input 
              value={formatDate(user?.createdAt)} 
              disabled={true} 
              className="rounded-lg py-2 bg-light-bg-secondary" 
              prefix={<CalendarOutlined className="text-gray-400 mr-2" />}
            />
          </Form.Item>
        </div>
      </Form>
      
      <div className="mt-4 p-4 bg-light-bg-secondary rounded-lg">
        <div className="flex items-start space-x-4">
          <div className="text-primary text-2xl">üí°</div>
          <div>
            <h4 className="font-medium">L·ªùi khuy√™n</h4>
            <p className="text-sm text-text-secondary">
              C·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n c·ªßa b·∫°n gi√∫p ch√∫ng t√¥i ph·ª•c v·ª• b·∫°n t·ªët h∆°n v√† th√¥ng b√°o cho b·∫°n v·ªÅ nh·ªØng ∆∞u ƒë√£i ƒë·∫∑c bi·ªát ph√π h·ª£p.
            </p>
          </div>
        </div>
      </div>
    </Card>
  );
};

export default PersonalInfoCard;